[package]
edition.workspace = true
name = "account-wasm"
version.workspace = true

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[lib]
crate-type = ["cdylib", "rlib"]

[dependencies]
account_sdk = { workspace = true, features = ["webauthn"] }
async-trait.workspace = true
base64.workspace = true
cainome.workspace = true
convert_case = "0.6.0"
coset.workspace = true
futures.workspace = true
getrandom = { version = "0.2", features = ["js"] }
hex = "0.4.3"
num-traits.workspace = true
rand = { version = "0.8", features = ["getrandom"] }
serde.workspace = true
serde_json.workspace = true
serde-wasm-bindgen.workspace = true
serde_with.workspace = true
starknet.workspace = true
starknet-types-core.workspace = true
thiserror.workspace = true
url = { workspace = true, default-features = false }
wasm-bindgen = { workspace = true, features = ["serde-serialize"] }
wasm-bindgen-futures.workspace = true
webauthn-rs-proto = { workspace = true, features = ["wasm"] }
web-sys = { version = "0.3", features = [
    "CredentialCreationOptions",
    "CredentialRequestOptions",
    "CredentialsContainer",
    "Navigator",
    "PublicKeyCredential",
    "PublicKeyCredentialCreationOptions",
    "Storage",
] }

# The `console_error_panic_hook` crate provides better debugging of panics by
# logging them with `console.error`. This is great for development, but requires
# all the `std::fmt` and `std::panicking` infrastructure, so isn't great for
# code size when deploying.
console_error_panic_hook = { version = "0.1.7", optional = true }
tsify-next = "0.5.4"

[dev-dependencies]
wasm-bindgen-test = "0.3.34"

[features]
console-error-panic = ["dep:console_error_panic_hook"]
console_error_panic_hook = []
