[package]
name = "account_sdk"
edition.workspace = true
version.workspace = true

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[lib]
crate-type = ["lib"]

[dependencies]
anyhow.workspace = true
async-trait.workspace = true
auto_impl = "1.0"
cainome.workspace = true
futures.workspace = true
hex.workspace = true
lazy_static.workspace = true
primitive-types.workspace = true
reqwest.workspace = true
serde.workspace = true
serde_json.workspace = true
serde_with.workspace = true
starknet.workspace = true
starknet-crypto.workspace = true
starknet-types-core.workspace = true
thiserror.workspace = true
toml.workspace = true
u256-literal.workspace = true
url.workspace = true
indexmap.workspace = true
num-traits.workspace = true
tsify-next = "0.5.4"
urlencoding = "2.1.3"
once_cell.workspace = true

# Webauthn deps
base64 = { workspace = true, optional = true }
base64urlsafedata = { workspace = true, optional = true }
coset = { workspace = true, optional = true }
ecdsa = { workspace = true, optional = true }
nom = { version = "7.1", optional = true }
p256 = { workspace = true, optional = true }
serde_cbor_2 = { version = "0.12.0-dev", optional = true }
sha2 = { workspace = true, optional = true }

# Filestorage deps
dirs = { version = "5", optional = true }

[dev-dependencies]
hyper = { version = "0.14.27", features = ["server"] }
rand_core = { version = "0.6", features = ["getrandom"] }
tempfile = "3.8"

[build-dependencies]
cainome.workspace = true
starknet.workspace = true
serde_json.workspace = true

[target.'cfg(not(target_arch = "wasm32"))'.dependencies]
tokio.workspace = true

# Include webauthn dependencies when 'webauthn' feature is enabled
webauthn-authenticator-rs = { workspace = true, features = [
    "softpasskey",
], optional = true }
webauthn-rs-core = { workspace = true, optional = true }
webauthn-rs-proto = { workspace = true, optional = true }

[target.'cfg(target_arch = "wasm32")'.dependencies]
js-sys = "0.3.70"
serde-wasm-bindgen.workspace = true
wasm-bindgen-futures.workspace = true
wasm-bindgen.workspace = true
wasm-bindgen-test = "0.3.34"
web-sys = { version = "0.3", features = ["console", "Storage"] }

# Include webauthn dependencies when 'webauthn' feature is enabled
webauthn-rs-proto = { workspace = true, optional = true, features = ["wasm"] }

[features]
# Define the 'webauthn' feature
webauthn = [
    "base64",
    "base64urlsafedata",
    "coset",
    "ecdsa",
    "nom",
    "p256",
    "serde_cbor_2",
    "sha2",
    "webauthn-authenticator-rs",
    "webauthn-rs-core",
    "webauthn-rs-proto",
    "web-sys/CredentialCreationOptions",
    "web-sys/CredentialRequestOptions",
    "web-sys/CredentialsContainer",
    "web-sys/Navigator",
    "web-sys/PublicKeyCredential",
    "web-sys/PublicKeyCredentialCreationOptions",
]
filestorage = ["dirs"]
