[package]
name = "account_sdk"
edition.workspace = true
version.workspace = true

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[lib]
crate-type = ["lib"]

[dependencies]
anyhow.workspace = true
async-trait.workspace = true
auto_impl = "1.0"
base64urlsafedata.workspace = true
base64.workspace = true
cainome.workspace = true
coset.workspace = true
ecdsa.workspace = true
futures.workspace = true
gloo-net = "0.6.0"
hex.workspace = true
lazy_static.workspace = true
nom = "7.1"
p256.workspace = true
primitive-types.workspace = true
reqwest.workspace = true
serde.workspace = true
serde_cbor_2 = { version = "0.12.0-dev" }
serde_json.workspace = true
serde_with.workspace = true
sha2.workspace = true
starknet.workspace = true
starknet-crypto.workspace = true
starknet-types-core.workspace = true
thiserror.workspace = true
toml.workspace = true
u256-literal.workspace = true
url.workspace = true
wasm-bindgen-futures.workspace = true
wasm-bindgen.workspace = true
web-sys = "0.3.69"
indexmap.workspace = true
num-traits.workspace = true
urlencoding = "2.1.3"
webauthn-rs-proto.workspace = true

[dev-dependencies]
hyper = { version = "0.14.27", features = ["server"] }
rand_core = { version = "0.6", features = ["getrandom"] }
once_cell.workspace = true
webauthn-authenticator-rs = { workspace = true, features = ["softpasskey"] }
webauthn-rs-core.workspace = true

[build-dependencies]
cainome.workspace = true

[target.'cfg(not(target_arch = "wasm32"))'.dependencies]
tokio.workspace = true

[target.'cfg(target_arch = "wasm32")'.dependencies]
wasm-bindgen-test = "0.3.34"
js-sys = "0.3.69"
