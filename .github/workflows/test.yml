name: test

on:
  push:
    branches:
      - main
  pull_request:

env:
  CARGO_TERM_COLOR: always
  RUST_VERSION: 1.80.1

jobs:
  rust:
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/dojoengine/dojo-dev:v1.0.0-alpha.11
    steps:
      - uses: actions/checkout@v4
      - run: git config --system --add safe.directory '*'
      - uses: dorny/paths-filter@v3
        id: changes
        with:
          filters: |
            rust:
              - '**/*.rs'
              - '**/*.toml'
              - '**/*.lock'
      - uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          toolchain: ${{ env.RUST_VERSION }}
          components: llvm-tools-preview
      - uses: Swatinem/rust-cache@v2
        if: steps.changes.outputs.rust == 'true'
      - uses: taiki-e/install-action@cargo-llvm-cov
        if: steps.changes.outputs.rust == 'true'
      - run:
          cargo llvm-cov --features webauthn --all-features --lcov --output-path
          lcov.info
        if: steps.changes.outputs.rust == 'true'
      - uses: codecov/codecov-action@v3
        if: steps.changes.outputs.rust == 'true'
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: lcov.info

  ts:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20.x
      - uses: actions/cache@v4
        with:
          path: ~/.pnpm-store
          key: ${{ runner.os }}-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-
      - run: corepack enable pnpm
      - uses: pnpm/action-setup@v4
        id: pnpm-install
        with:
          version: 9.7.0
          run_install: false
      - run: pnpm install --frozen-lockfile
      - run: pnpm test:ci --coverage
      - uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: coverage/lcov.info

  storybook:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20.x
      - uses: actions/cache@v4
        with:
          path: ~/.pnpm-store
          key: ${{ runner.os }}-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-

      - run: corepack enable pnpm

      - uses: pnpm/action-setup@v4
        id: pnpm-install
        with:
          run_install: false

      - run: pnpm install --frozen-lockfile
      - run: pnpm keychain exec playwright install
      - run: pnpm test:storybook
