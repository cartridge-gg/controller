[workspace]
resolver = "2"
members = ["packages/account_sdk", "packages/account-wasm"]

[workspace.package]
edition = "2021"
version = "0.1.0"

[workspace.dependencies]
account_sdk = { path = "packages/account_sdk" }
account-wasm = { path = "packages/account-wasm" }

anyhow = "1"
async-trait = "0.1.80"
base64 = "0.22"
cairo-lang-starknet = "2.4.0"
coset = { version = "0.3.4", features = ["std"] }
ecdsa = "0.16.9"
futures = "0.3"
hex = "0.4.3"
indexmap = { version = "2.2.6", features = ["serde"] }
lazy_static = "1"
once_cell = "1.19.0"
p256 = "0.13"
primitive-types = { version = "0.12", default-features = false }
getrandom = { version = "0.2", features = ["js"] }
rand = { version = "0.8", features = ["getrandom"] }
reqwest = { version = "0.11.16", default-features = false, features = [
    "json",
    "rustls-tls",
] }
serde = { version = "1.0.160", default-features = false, features = ["derive"] }
serde_json = { version = "1.0.96", default-features = false, features = [
    "alloc",
    "raw_value",
] }
serde-wasm-bindgen = "0.6.5"
serde_with = { version = "3.9.0", default-features = false, features = [
    "alloc",
    "macros",
] }
sha2 = "0.10"
thiserror = "1"
toml = "0.8"
u256-literal = "1"
url = { version = "2.3.1", default-features = false }
num-traits = "0.2.19"
wasm-bindgen = "0.2"
wasm-bindgen-futures = "0.4.42"
wasm-webauthn = { git = "https://github.com/cartridge-gg/wasm-webauthn", rev = "972693f" }
tokio = { version = "1", features = ["macros", "time"] }
base64urlsafedata = { git = "https://github.com/cartridge-gg/webauthn-rs", rev = "a6cea88" }
serde_cbor_2 = { version = "0.12.0-dev" }
webauthn-rs-core = { git = "https://github.com/cartridge-gg/webauthn-rs", rev = "a6cea88" }
webauthn-rs-proto = { git = "https://github.com/cartridge-gg/webauthn-rs", rev = "a6cea88" }
webauthn-authenticator-rs = { git = "https://github.com/cartridge-gg/webauthn-rs", rev = "a6cea88", features = [
    "softpasskey",
] }

cainome = { git = "https://github.com/cartridge-gg/cainome", tag = "v0.4.2", features = [
    "abigen-rs",
] }

starknet = "0.12.0"
starknet-crypto = "0.7.1"
starknet-types-core = { version = "0.1", features = ["curve", "hash"] }

# Compiler optimization when running test to prevent ‘locals exceed maximum’ error,
# where a function is using more that the maximum allowed local variables.
[profile.dev]
incremental = true
opt-level = 1

[profile.release]
lto = true
opt-level = 's'
